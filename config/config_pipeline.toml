[pipeline]
display=0
is_aarch64=1
known_face_dir="data/known_faces"
save_feature_path="data/features"
save_feature=0
realtime=1

[streammux]
gpu_id=0
batch-size=8                    # = number of sources (if all active simultaneously)
width=960
height=540
batched-push-timeout=15000      # 15ms - More aggressive for motion scenarios
enable-padding=1                # Keep aspect ratio, pad with black
nvbuf-memory-type=0             # Use system memory (more stable for buffer overflow issues)
live-source=1                   # Important for RTSP
sync-inputs=0                   # Critical: Don't wait for slow sources to prevent buffer backup
# Motion-specific optimizations
attach-sys-ts=1                 # Use system timestamps for better sync

[nvosd]
process-mode=0
display-text=1

[source]
"621ca2e007e648f898099597a078bccd" = "rtsp://admin:123456Aa@192.168.0.213:1554/Streaming/Channels/501"
"625d66f10a0b4a0a920be73f705773bd" = "rtsp://admin:wesmart!@192.168.0.243:554/Unicast/channels/101"
"6a887f101a204b3788e45b9d4cbcb84b" = "rtsp://admin:123456Aa@192.168.0.213:1554/Streaming/Channels/601"
"93efaf1091cc4b83990619a17347879f" = "rtsp://admin:123456Aa@192.168.0.213:1554/Streaming/Channels/801"
"c0fad364fd7345b1af2fe5a2f691e7f7" = "rtsp://admin:123456Aa@192.168.0.213:1554/Streaming/Channels/701"
"c9bb715db20a489f94f58d36bb3602d0" = "rtsp://admin:wesmart1@192.168.0.102:554/Streaming/Channels/101"
"d73cf20e2aa544b7b352070f24bff721" = "rtsp://admin:123456Aa@192.168.0.213:1554/Streaming/Channels/401"

[pgie]
#config-file-path="/home/m2n/edge-deepstream/config/config_retinaface.txt"
config-file-path="/home/m2n/edge-deepstream/config/config_yolov8n_face.txt"

[sgie]
config-file-path="/home/m2n/edge-deepstream/config/config_arcface.txt"

[tracker]
config-file-path="/home/m2n/edge-deepstream/config/config_tracker_perf.txt"

[tiler]
width=1280
height=720
#enable-padding=1

[sink]
qos=1
sync=0

[recognition]
# Optimized: Slightly higher cosine similarity threshold for better precision
threshold=0.5
# Directory to save recognized face images
#save_dir="data/faces/recognized"
save_dir="/dev/shm/edge-deepstream/recognized"
# Save mode for recognized images: "all" (every frame), "first" (first per track), "best" (best score per track)
save_mode="first"
# Backend: "faiss" (default), "cuvs" (experimental; requires RAPIDS cuVS), or "auto"
backend="faiss"
# If your known_face_dir has images instead of .npy embeddings, you can point to a folder of .npy features
# to build the index from. If empty or not set, will use known_face_dir.
feature_dir="data/known_faces"
# Vector index configuration
# Use FAISS-based index for matching (1 to enable, 0 to disable)
use_index=1
# Metric for matching: "cosine" (inner product) or "l2"
metric="cosine"
# FAISS index type: "flat" (exact), "ivf" (coarse quantizer), or "ivfpq" (compressed)
index_type="flat"
# Optimized: Enable GPU acceleration for better performance with large galleries
use_gpu=0
gpu_id=0
# IVF lists (only for ivf/ivfpq); if 0, auto sqrt(N)
nlist=0
# PQ sub-vectors (only for ivfpq); if 0, auto dim/8
m_pq=0
nbits_pq=8
# Persisted index paths (optional); if present, will attempt to load; else build and save
index_path="data/index/faiss.index"
labels_path="data/index/labels.json"

# --- Live indexing options ---
# Enable adding embeddings from the live stream into the index
index_stream=0
# Indexing mode: "per_track" | "per_frame"
index_mode="per_track"
# "track" | "name"
index_label="name"
# Optional: live-updated index; if empty, reuse index_path/labels_path
stream_index_path="data/index/live.index"
stream_labels_path="data/index/live_labels.json"

# Motion-optimized: Disable recognize-once for better motion tracking
# This allows re-recognition during motion for better stability
recognize_once_per_track=1

[thresholds]
# Minimum PGIE detection confidence to keep faces (env PGIE_MIN_CONF overrides if set)
pgie_min_conf=0.45

[events]
# Enable sending recognition events over Unix domain socket
enable=1
# Path to Unix domain socket listened by the receiver process
unix_socket="/tmp/my_socket"
# Include image bytes in the packet (PNG/JPEG). 1=yes, 0=no
send_image=1

[mqtt]
# Local MQTT broker settings (core_v2 style)
host = "localhost"
port = 1883
# Topics
request_topic = "/local/core/v2/ai/request"
response_topic = "/local/core/v2/ai/response"

[cache]
# Motion-optimized: Reduced cache size for better performance
max_track_embeddings=30
# Motion-optimized: Require fewer embeddings for faster recognition
min_embeddings_for_fusion=1
# Fusion mode: mean | median is more robust to motion blur outliers
fusion_mode="mean"

[debug]
# Verbose console prints (matching per-frame)
verbose=0
## Performance profiling verbosity: 0=quiet,1=periodic summary,2=include attach events
perf_verbose=0
